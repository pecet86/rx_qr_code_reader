task bumpMajor {
    finalizedBy 'version'
    doLast {
        ant.propertyfile(file: "${project.rootDir}/gradle/version/version.properties") {
            entry(key: 'major', type: 'int', operation: '+', value: 1)
            entry(key: 'minor', type: 'int', operation: '=', value: 0)
            entry(key: 'patch', type: 'int', operation: '=', value: 0)
        }
        //tasks.version.execute()
    }
}

task bumpMinor {
    finalizedBy 'version'
    doLast {
        ant.propertyfile(file: "${project.rootDir}/gradle/version/version.properties") {
            entry(key: 'minor', type: 'int', operation: '+', value: 1)
            entry(key: 'patch', type: 'int', operation: '=', value: 0)
        }
        //tasks.version.execute()
    }
}

task bumpPatch() {
    finalizedBy 'version'
    doLast {
        ant.propertyfile(file: "${project.rootDir}/gradle/version/version.properties") {
            entry(key: 'patch', type: 'int', operation: '+', value: 1)
        }
    }
}

task version {
    doLast {
        println versionName()
        println versionCode()
    }
}

ext.versionCode = {
    def versionProps = getVersionProps()
    int major = versionProps['major'] as int
    int minor = versionProps['minor'] as int
    int patch = versionProps['patch'] as int
    return major * 1000000 + minor * 1000 + patch
}

ext.versionName = {
    def versionProps = getVersionProps()
    return "${versionProps['major']}.${versionProps['minor']}.${versionProps['patch']}"
}

Properties getVersionProps() {
    def versionPropsFile = file("${project.rootDir}/gradle/version/version.properties")
    Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropsFile))
    return versionProps
}